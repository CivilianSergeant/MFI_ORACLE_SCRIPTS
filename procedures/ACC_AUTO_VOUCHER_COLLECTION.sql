CREATE OR REPLACE PROCEDURE MFIDSK.ACC_AUTO_VOUCHER_COLLECTION(
officeID NUMBER,
businessDate DATE,
orgID NUMBER,
createUser VARCHAR
)
/**
 * Author Himel
 * 2021-01-08
 */
AS
msg VARCHAR2(255) := '';
isValid NUMBER(1) := 0;
countRecord NUMBER(19);
spName varchar(80) := SYSDATE || ' ACC_AUTO_VOUCHER_COLLECTION: ';
jr_Voucher_No	varchar(50):= '';
ca_Voucher_No	varchar(50):= '';
vYear NUMBER(19); 
vCH_NO			Varchar(30):= '';
officeID_PORT	NUMBER(19);
naration Varchar(200);
accMasTerId NUMBER(19);
lVouNo varchar(50);
currentYear NUMBER(4);
admissionID NUMBER(32);
passBookID NUMBER(32);
loanFormID NUMBER(32);
RMAccid NUMBER(19);
RHAccid NUMBER(19);
RMAccidDr NUMBER(19);
vCount NUMBER(32);
accTrxMasterID NUMBER(32);
accCodeLLP NUMBER(32);
BEGIN
	vYear := UTIL.GET_YEAR_FROM_DATE(businessDate);
	currentYear := UTIL.GET_YEAR_FROM_DATE(SYSDATE);

	IF(AUTO_VOUCHER_PROCESS.HAS_DAY_INITIAL(officeID,businessDate)=0) THEN
		msg := spName || 'There is no day initial';
		isValid := 1;
   		GOTO validation_point;
   	ELSE 
   		DAY_END_PROCESS.ADJUSTMENT(officeID,orgID,createUser);
	END IF;

	IF(AUTO_VOUCHER_PROCESS.HAS_ACC_MASTER_RECORD(officeID, orgID) = 0) THEN
		INSERT INTO ACC_LAST_VOUCHER( OFFICE_ID, VOUCHER_NO)
		VALUES(officeID,'01-' || currentYear);
	END IF;

	
	IF(AUTO_VOUCHER_PROCESS.HAS_LOAN_SUMMARY_DST_DLT(officeID,businessDate) <> 0 ) THEN
	
		SELECT MIN(VOUCHER_NO) 
		INTO lVouNo
		FROM ACC_TRX_MASTER 
		WHERE OFFICE_ID=6 
		AND TRX_DATE=TO_DATE('2019-10-03','YYYY-MM-DD')
		AND IS_POSTED=0;
	
		IF(lVouNo IS NULL) THEN
			msg := spName || 'Voucher No is null found';
			isValid := 1;
   			GOTO validation_point;
		END IF;
		
		UPDATE ACC_LAST_VOUCHER
			SET VOUCHER_NO=lVouNo WHERE OFFICE_ID=officeID;
		
	END IF;
	
	
	MERGE INTO ACC_TRX_DETAIL t
	USING (
		SELECT TRX_MASTER_ID 
		FROM ACC_TRX_MASTER 
		WHERE OFFICE_ID=6 
		AND TRX_DATE=TO_DATE('2019-10-03','YYYY-MM-DD') 
		AND IS_POSTED=0 AND IS_ACTIVE=1 AND IS_AUTO_VOUCHER=1
	) s
	ON (t.TRX_MASTER_ID = s.TRX_MASTER_ID)
	WHEN MATCHED THEN
	Update  SET IS_ACTIVE=0,INACTIVE_DATE=SYSDATE;
 
	UPDATE ACC_TRX_MASTER 
	SET IS_ACTIVE=0,INACTIVE_DATE=SYSDATE 
	WHERE OFFICE_ID=6 
	AND TRX_DATE=TO_DATE('2019-10-03','YYYY-MM-DD') 
	AND IS_POSTED=0 AND IS_ACTIVE=1 and IS_AUTO_VOUCHER=1;


	SELECT VOUCHER_NO INTO vCH_NO FROM ACC_LAST_VOUCHER WHERE OFFICE_ID=officeID;

	--Start Loan Collection(CASH)
	naration := 'By receiving Miscellaneous Entry as per list';


	IF(AUTO_VOUCHER_PROCESS.HAS_MISC(officeID, businessDate) <> 0) THEN
		
		INSERT INTO TEMP_ACC_TRX_DETAIL(OFFICE_ID,ACC_ID, CREDIT, DEBIT, NARRATION)
		SELECT officeID OFFICE_ID,a.ACC_ID,SUM(AMOUNT) CREDIT,0 DEBIT,naration NARRATION FROM MISCELLANEOUS m 
		INNER JOIN PRODUCTS p
			ON m.PRODUCT_ID=p.PRODUCT_ID 
		INNER JOIN ACC_CHART a 
			ON p.PRODUCT_CODE=a.ACC_CODE
		 WHERE m.TRX_DATE=businessDate AND m.OFFICE_ID=officeID AND m.IS_ACTIVE=1
		 GROUP BY a.ACC_ID;
		
	END IF;


	--Member Admission Fee
	SELECT ac.ACC_ID INTO admissionID
		FROM ACCOUNTING_INTERFACE ai 
		INNER JOIN ACC_CHART ac 
		ON ai.ACC_CODE=ac.ACC_CODE WHERE TRX_IND='MA' AND TRX_TYPE='Cr' AND ac.IS_ACTIVE=1;
	
	SELECT ac.ACC_ID INTO passBookID
		FROM ACCOUNTING_INTERFACE ai 
		INNER JOIN ACC_CHART ac 
		ON ai.ACC_CODE=ac.ACC_CODE 
		WHERE TRX_IND='PB' AND TRX_TYPE='Cr' AND ac.IS_ACTIVE=1;
	
	SELECT ac.ACC_ID INTO loanFormID
		FROM ACCOUNTING_INTERFACE ai 
		INNER JOIN ACC_CHART ac 
		ON ai.ACC_CODE=ac.ACC_CODE 
		WHERE TRX_IND='LF' AND TRX_TYPE='Cr' AND ac.IS_ACTIVE=1;


	naration := 'By Members Admission Fee as per list';

	
	IF(AUTO_VOUCHER_PROCESS.HAS_MEMBER_WITH_TRANSFER_HISTORY(officeID, admissionID, businessDate) <> 0) THEN
		
		INSERT INTO TEMP_ACC_TRX_DETAIL(OFFICE_ID,  ACC_ID, CREDIT, DEBIT, NARRATION)
		SELECT officeID OFFICE_ID,a.ACC_ID,SUM(AMOUNT) CREDIT,0 DEBIT,naration NARRATION
		FROM (
			SELECT m.OFFICE_ID,admissionID as ACC_ID,mc.ADMISSION_FEE as AMOUNT
			FROM MEMBERS m INNER JOIN MEMBER_CATEGORIES mc 
				ON m.MEMBER_CATEGORY_ID=mc.MEMBER_CATEGORY_ID 
			LEFT JOIN (
					SELECT * FROM TRANSFER_HISTORY
				) t ON m.MEMBER_ID=t.TR_MEMBER_ID
			WHERE m.JOIN_DATE=businessDate AND m.OFFICE_ID=officeID
			AND m.IS_ACTIVE=1 AND m.MEMBER_STATUS=1
			AND t.TRANSFER_HISTORY_ID IS NULL
		) a
		 GROUP BY a.ACC_ID;
		 
	END IF;
	
	--Members PassBook Fee
	naration := 'By Members PassBook Fee as per list';
	IF(AUTO_VOUCHER_PROCESS.HAS_MEMBER_WITH_TRANSFER_HISTORY(officeID, passBookID, businessDate) <> 0) THEN
	
		INSERT INTO TEMP_ACC_TRX_DETAIL( OFFICE_ID, ACC_ID, CREDIT, DEBIT, NARRATION)
		SELECT officeID OFFICE_ID, a.ACC_ID,SUM(AMOUNT) CREDIT,0 DEBIT,naration NARRATION
		FROM (
			SELECT m.OFFICE_ID,passBookID as ACC_ID,mc.PASS_BOOK_FEE as AMOUNT
			FROM MEMBERS m INNER JOIN MEMBER_CATEGORIES mc 
				ON m.MEMBER_CATEGORY_ID=mc.MEMBER_CATEGORY_ID 
			LEFT JOIN (
					SELECT * FROM TRANSFER_HISTORY
				) t ON m.MEMBER_ID=t.TR_MEMBER_ID
			WHERE m.JOIN_DATE=businessDate AND m.OFFICE_ID=officeID
			AND m.IS_ACTIVE=1 AND m.MEMBER_STATUS=1
			AND t.TRANSFER_HISTORY_ID IS NULL
		) a
		 GROUP BY a.ACC_ID;
		
	END IF;
	
	---Sale of Loan Form
	naration := 'By Sale of Loan Form as per list';
	IF(AUTO_VOUCHER_PROCESS.HAS_MEMBER_WITH_TRANSFER_HISTORY(officeID, loanFormID, businessDate) <> 0) THEN
		
		INSERT INTO TEMP_ACC_TRX_DETAIL(OFFICE_ID,  ACC_ID, CREDIT, DEBIT, NARRATION)
		SELECT officeID OFFICE_ID, a.ACC_ID,SUM(AMOUNT) CREDIT,0 DEBIT,naration NARRATION
		FROM (
			SELECT m.OFFICE_ID,loanFormID as ACC_ID,CAST(mc.LOAN_FORM_FEE as Numeric(18,0)) as AMOUNT
			FROM MEMBERS m INNER JOIN MEMBER_CATEGORIES mc 
				ON m.MEMBER_CATEGORY_ID=mc.MEMBER_CATEGORY_ID 
			LEFT JOIN (
					SELECT * FROM TRANSFER_HISTORY
				) t ON m.MEMBER_ID=t.TR_MEMBER_ID
			WHERE m.JOIN_DATE=businessDate AND m.OFFICE_ID=officeID
			AND m.IS_ACTIVE=1 AND m.MEMBER_STATUS=1
			AND t.TRANSFER_HISTORY_ID IS NULL
		) a
		 GROUP BY a.ACC_ID;
		
	END IF;

	--Risk Fund--
	
	SELECT ac.ACC_ID INTO RMAccid
	FROM ACCOUNTING_INTERFACE ai 
	INNER JOIN ACC_CHART ac ON ai.ACC_CODE=ac.ACC_CODE
	WHERE TRX_IND='RM' AND TRX_TYPE='Cr';

	SELECT ac.ACC_ID INTO RMAccidDr
	FROM ACCOUNTING_INTERFACE ai 
	INNER JOIN ACC_CHART ac ON ai.ACC_CODE=ac.ACC_CODE
	WHERE TRX_IND='RM' AND TRX_TYPE='Dr';
	
	SELECT ac.ACC_ID INTO RHAccid
	FROM ACCOUNTING_INTERFACE ai 
	INNER JOIN ACC_CHART ac ON ai.ACC_CODE=ac.ACC_CODE
	WHERE TRX_IND='RH' AND TRX_TYPE='Cr';

	naration := 'RiskFund as per List';

	IF (AUTO_VOUCHER_PROCESS.HAS_LOAN_DISBURSE_ONDATE(officeID,businessDate) <> 0) THEN
		
		INSERT INTO TEMP_ACC_TRX_DETAIL( OFFICE_ID, ACC_ID, CREDIT, DEBIT, NARRATION)
		SELECT officeID OFFICE_ID,RMAccid ACC_ID,Round((sum(rf.amt)*70)/100,0) CREDIT,0 DEBIT,naration NARRATION
			FROM (
			SELECT (l.PRINCIPAL_LOAN*p.INSURANCE_ITEM_RATE)/100 amt,l.OFFICE_ID 
				FROM LOAN_SUMMARY l 
				INNER JOIN PRODUCTS p ON l.PRODUCT_ID=p.PRODUCT_ID 
 				WHERE l.OFFICE_ID=officeID AND l.DISBURSE_DATE=businessDate 
 				AND l.IS_ACTIVE=1 AND l.LOAN_STATUS=1 AND l.POSTED=0
 				AND SUBSTR(p.PRODUCT_CODE,0,1)<>'7'
 			) rf GROUP BY rf.OFFICE_ID
 			Having rf.OFFICE_ID=officeID;
 		
 		INSERT INTO TEMP_ACC_TRX_DETAIL( OFFICE_ID,  ACC_ID, CREDIT, DEBIT, NARRATION)
		SELECT officeID OFFICE_ID, RHAccid ACC_ID,
		((sum(rf.amt)*100)/100)-(Round((sum(rf.amt)*70)/100,0)) CREDIT,0 DEBIT,naration NARRATION
		FROM (
			SELECT (l.PRINCIPAL_LOAN*p.INSURANCE_ITEM_RATE)/100 amt,l.OFFICE_ID 
			FROM LOAN_SUMMARY l 
			INNER JOIN PRODUCTS p ON l.PRODUCT_ID=p.PRODUCT_ID 
 			WHERE l.OFFICE_ID=officeID AND l.DISBURSE_DATE=businessDate 
 			AND l.IS_ACTIVE=1 AND l.LOAN_STATUS=1 AND l.POSTED=0
 			AND SUBSTR(p.PRODUCT_CODE,0,1)<>'7'
		) rf GROUP BY rf.OFFICE_ID
		HAVING rf.OFFICE_ID=officeID;
 
	END IF;

	--End-DSK--
	
	naration := 'By receiving LoanInstallment as per list';

	IF(AUTO_VOUCHER_PROCESS.HAS_LOAN_PAID(officeID, orgID, businessDate, vCH_NO, naration,'LR','Cr') <> 0) THEN
		
		INSERT INTO TEMP_ACC_TRX_DETAIL( OFFICE_ID, ACC_ID, CREDIT, DEBIT, NARRATION)
		SELECT officeID OFFICE_ID, ac.ACC_ID,SUM(NVL(dlt.LOAN_PAID,0)) CREDIT, 0 DEBIT,naration NARRATION
		FROM DAILY_LOAN_TRX dlt INNER JOIN ACCOUNTING_INTERFACE ai ON dlt.PRODUCT_ID=ai.PRODUCT_ID
		INNER JOIN PRODUCTS p on dlt.PRODUCT_ID=p.PRODUCT_ID
		INNER JOIN ACC_CHART ac on ai.ACC_CODE=ac.ACC_CODE
		WHERE dlt.OFFICE_ID=officeID AND dlt.ORGANIZATION_ID=orgID 
		AND p.PRODUCT_TYPE IN (1,2,3) AND ai.TRX_IND='LR' And ai.VOUCHER_TYPE='Cr'
		AND dlt.TRX_TYPE IN(10,20,50,41) AND ac.IS_ACTIVE=1
		GROUP BY dlt.OFFICE_ID, ai.VOUCHER_CATEGORY,ac.ACC_ID
		HAVING SUM(NVL(dlt.LOAN_PAID,0)) <> 0; 
		
	END IF;

	---Start Interest Collection(CASH)-----
	IF(AUTO_VOUCHER_PROCESS.HAS_LOAN_PAID(officeID, orgID, businessDate, vCH_NO, naration,'SR','Cr') <> 0) THEN
		
		INSERT INTO TEMP_ACC_TRX_DETAIL(OFFICE_ID, ACC_ID, CREDIT, DEBIT, NARRATION)
		SELECT officeID OFFICE_ID, ac.ACC_ID,SUM(NVL(dlt.INT_PAID,0)), 0,naration
		FROM DAILY_LOAN_TRX dlt INNER JOIN ACCOUNTING_INTERFACE ai on dlt.PRODUCT_ID=ai.PRODUCT_ID
		INNER JOIN PRODUCTS p ON dlt.PRODUCT_ID=p.PRODUCT_ID
		INNER JOIN ACC_CHART ac ON ai.ACC_CODE=ac.ACC_CODE
		WHERE dlt.OFFICE_ID=officeID AND dlt.ORGANIZATION_ID=orgID 
		AND p.PRODUCT_TYPE IN (1,2,3) AND ai.TRX_IND='SR' And ai.VOUCHER_TYPE='Cr'
		AND dlt.TRX_TYPE IN(10,20,50,41) And ac.IS_ACTIVE=1
		GROUP BY dlt.OFFICE_ID, ai.VOUCHER_CATEGORY,ac.ACC_ID
		HAVING SUM(NVL(dlt.INT_PAID,0)) <> 0;
		
	END IF;

	--Partial Intrest Paid VOucher--
	IF(AUTO_VOUCHER_PROCESS.HAS_PARTIAL_INT_PAID(officeID,businessDate,'SR','Cr') <> 0) THEN 
		
		INSERT INTO TEMP_ACC_TRX_DETAIL(OFFICE_ID, ACC_ID, CREDIT, DEBIT, NARRATION)
		SELECT officeID OFFICE_ID, ac.ACC_ID, SUM(NVL(ls.PARTIAL_INT_PAID,0)) ,0,naration 
		FROM LOAN_SUMMARY ls INNER JOIN ACCOUNTING_INTERFACE ai 
			on ls.PRODUCT_ID=ai.PRODUCT_ID
			INNER JOIN PRODUCTS p ON ls.PRODUCT_ID=p.PRODUCT_ID
			INNER JOIN ACC_CHART ac ON ai.ACC_CODE=ac.ACC_CODE
		 	WHERE ls.DISBURSEMENT_TYPE=2 AND ls.OFFICE_ID=officeID AND ls.DISBURSE_DATE=businessDate
		 	AND ai.TRX_IND='SR' AND ai.VOUCHER_TYPE='Cr'
		 	GROUP BY ac.ACC_ID
		 	HAVING SUM(NVL(ls.PARTIAL_INT_PAID,0))<>0;
		 	
	END IF;

	--Start Saving Collection(CASH)--
	naration := 'By Deposit SavingInstallment as per list';

	IF(AUTO_VOUCHER_PROCESS.HAS_DEPOSIT(officeID, orgID, vCH_NO,naration,businessDate) <> 0) THEN 
		
		INSERT INTO TEMP_ACC_TRX_DETAIL(OFFICE_ID, ACC_ID, CREDIT, DEBIT, NARRATION)
		SELECT officeID OFFICE_ID, ac.ACC_ID,SUM(NVL(dst.SAVING_INSTALLMENT,0))+SUM(NVL(dst.PENALTY,0)) CREDIT,
		0 DEBIT,naration NARRATION
		FROM DAILY_SAVING_TRX dst INNER JOIN ACCOUNTING_INTERFACE ai ON dst.PRODUCT_ID=ai.PRODUCT_ID
		INNER JOIN PRODUCTS p ON dst.PRODUCT_ID=p.PRODUCT_ID
		INNER JOIN ACC_CHART ac ON ai.ACC_CODE=ac.ACC_CODE
		WHERE dst.OFFICE_ID=officeID AND dst.ORGANIZATION_ID=orgID  AND p.PRODUCT_TYPE = 0 
		AND ai.TRX_IND='SD' AND ai.VOUCHER_TYPE='Cr'
		AND dst.TRANS_TYPE IN(10,20,41) AND ac.IS_ACTIVE=1
		GROUP BY dst.OFFICE_ID, ai.VOUCHER_CATEGORY,ac.ACC_ID
		HAVING SUM(NVL(dst.SAVING_INSTALLMENT,0))+SUM(NVL(dst.PENALTY,0)) <> 0;

	END IF;

	AUTO_VOUCHER_PROCESS.SAVE_ACC_TRX_DETAIL_FROM_TEMP(officeID,orgID,businessDate,vCH_NO);

	--Start Saving Withdrawal(CASH)--
	naration := 'To Withdrawal As per list';

	IF(AUTO_VOUCHER_PROCESS.HAS_WITHDRAWAL(officeID, orgID, businessDate, 
	vCH_NO, naration, 'SW', 'Dr') <> 0) THEN
		
		INSERT INTO TEMP_ACC_TRX_DETAIL(OFFICE_ID, ACC_ID, CREDIT, DEBIT, NARRATION)
		SELECT officeID OFFICE_ID,ac.ACC_ID,0 CREDIT, 
		SUM(NVL(dst.WITHDRAWAL,0)) DEBIT,naration NARRATION
		FROM DAILY_SAVING_TRX dst 
		INNER JOIN ACCOUNTING_INTERFACE ai ON dst.PRODUCT_ID=ai.PRODUCT_ID
		INNER JOIN PRODUCTS p ON dst.PRODUCT_ID=p.PRODUCT_ID
		INNER JOIN ACC_CHART ac ON ai.ACC_CODE=ac.ACC_CODE
		WHERE dst.OFFICE_ID=officeID AND p.PRODUCT_TYPE = 0 
		AND ai.TRX_IND='SW' AND ai.VOUCHER_TYPE='Dr'
		AND dst.TRANS_TYPE IN(10,20,41) AND ac.IS_ACTIVE=1 AND dst.ORGANIZATION_ID=orgID
		GROUP BY dst.OFFICE_ID, ai.VOUCHER_CATEGORY,ac.ACC_ID
		HAVING SUM(NVL(dst.WITHDRAWAL,0)) <> 0;
	
	END IF;
	
	--Start Loan Disbursement(CASH)--
	naration := 'To Disburse Loan As per list from Cash';

	
   IF(AUTO_VOUCHER_PROCESS.HAS_LOAN_DISBURSEMENT(officeID, orgID,
   								businessDate,vCH_NO,naration,'101') <> 0) THEN
   	
   		INSERT INTO TEMP_ACC_TRX_DETAIL(OFFICE_ID, ACC_ID, CREDIT, DEBIT, NARRATION)
   		SELECT p.OFFICE_ID,p.ACC_ID,0 CREDIT ,SUM(p.DEBIT) DEBIT,p.NARRATION 
			FROM (
		SELECT 6 OFFICE_ID, ac.ACC_ID,0 CREDIT, 
		SUM(NVL(ls.PRINCIPAL_LOAN,0)) DEBIT,'' NARRATION
	    FROM LOAN_SUMMARY ls INNER JOIN ACCOUNTING_INTERFACE ai on ls.PRODUCT_ID=ai.PRODUCT_ID
		INNER JOIN PRODUCTS p on ls.PRODUCT_ID=p.PRODUCT_ID
		INNER JOIN ACC_CHART ac on ai.ACC_CODE=ac.ACC_CODE
		WHERE ls.OFFICE_ID=6  AND p.PRODUCT_TYPE = 1 
		AND ai.TRX_IND='LD' AND ai.VOUCHER_TYPE='Dr'
		AND ls.TRANS_TYPE='101'  AND ac.IS_ACTIVE=1
		AND ls.DISBURSE_DATE = TO_DATE('2019-10-03','YYYY-MM-DD') 
		AND ls.ORGANIZATION_ID=4 AND ls.INSTALLMENT_DATE=TO_DATE('2019-10-03','YYYY-MM-DD')
		AND ls.IS_ACTIVE=1 AND ls.LOAN_STATUS=1 AND ls.POSTED=0 AND ls.DISBURSEMENT_TYPE<>2
		GROUP BY ls.OFFICE_ID, ai.VOUCHER_CATEGORY,ac.ACC_ID
		HAVING SUM(NVL(ls.PRINCIPAL_LOAN,0))<>0
		UNION ALL
		SELECT 6 OFFICE_ID, ac.ACC_ID, 0 CREDIT, 
		SUM(NVL(ls.PARTIAL_AMOUNT,0)) DEBIT, '' NARRATION
		FROM LOAN_SUMMARY ls 
		INNER JOIN ACCOUNTING_INTERFACE ai ON ls.PRODUCT_ID=ai.PRODUCT_ID
		INNER JOIN PRODUCTS p ON ls.PRODUCT_ID=p.PRODUCT_ID
		INNER JOIN ACC_CHART ac ON ai.ACC_CODE=ac.ACC_CODE
		WHERE ls.OFFICE_ID=6  AND p.PRODUCT_TYPE = 1 AND ai.TRX_IND='LD' AND ai.VOUCHER_TYPE='Dr'
		AND ls.TRANS_TYPE='101'  AND ac.IS_ACTIVE=1
		AND ls.DISBURSE_DATE =TO_DATE('2019-10-03','YYYY-MM-DD') 
		AND ls.ORGANIZATION_ID=4 AND ls.INSTALLMENT_DATE=TO_DATE('2019-10-03','YYYY-MM-DD')
		AND ls.IS_ACTIVE=1 AND ls.LOAN_STATUS=1  and ls.DISBURSEMENT_TYPE=2
		GROUP BY ls.OFFICE_ID, ai.VOUCHER_CATEGORY,ac.ACC_ID
		HAVING SUM(NVL(ls.PARTIAL_AMOUNT,0))<>0
		) p GROUP BY p.OFFICE_ID, p.ACC_ID,p.NARRATION;
   
   END IF;

  	AUTO_VOUCHER_PROCESS.SAVE_ACC_TRX_DETAIL_FROM_TEMP(officeID,orgID,businessDate,vCH_NO);
  
  	--Start Saving Collection(BANK)--
  	naration := 'By Deposit SavingInstallment as per list To Bank';
  	
  	IF(AUTO_VOUCHER_PROCESS.HAS_DEPOSIT_TO_BANK(officeID, orgID, businessDate,vCH_NO,naration)<>0) THEN
  		
  		INSERT INTO TEMP_ACC_TRX_DETAIL(OFFICE_ID, ACC_ID, CREDIT, DEBIT, NARRATION)
		SELECT officeID OFFICE_ID,ac.ACC_ID,SUM(NVL(dst.SAVING_INSTALLMENT,0)) CREDIT,
		0 DEBIT,naration NARRATION
		FROM DAILY_SAVING_TRX dst INNER JOIN ACCOUNTING_INTERFACE ai 
			ON dst.PRODUCT_ID=ai.PRODUCT_ID
		INNER JOIN PRODUCTS p ON dst.PRODUCT_ID=p.PRODUCT_ID
		INNER JOIN ACC_CHART ac ON ai.ACC_CODE=ac.ACC_CODE
		WHERE dst.OFFICE_ID=officeID AND dst.ORGANIZATION_ID=orgID  
		AND p.PRODUCT_TYPE = 0 and ai.TRX_IND='SD' And ai.VOUCHER_TYPE='Cr'
		AND dst.TRANS_TYPE IN(22) And ac.IS_ACTIVE=1
		GROUP BY dst.OFFICE_ID, ai.VOUCHER_CATEGORY,ac.ACC_ID
		HAVING SUM(NVL(dst.SAVING_INSTALLMENT,0))<>0;
	
  	END IF;
  
  	--BankVoucher Contra(BA)--
  	naration := 'To Bank Deposit from SavingInstallment as per list';
  
	IF(AUTO_VOUCHER_PROCESS.HAS_BANK_VOUCHER_CONTRA(officeID, orgID, businessDate,
	vCH_NO, naration)<>0) THEN
		
		INSERT INTO TEMP_ACC_TRX_DETAIL( OFFICE_ID, ACC_ID, CREDIT, DEBIT, NARRATION)
		SELECT officeID OFFICE_ID,ac.ACC_ID,0 CREDIT,
		SUM(NVL(dst.SAVING_INSTALLMENT,0)) DEBIT,naration NARRATION
		FROM DAILY_SAVING_TRX dst INNER JOIN ACCOUNTING_INTERFACE ai on dst.PRODUCT_ID=ai.PRODUCT_ID
		INNER JOIN PRODUCTS p on dst.PRODUCT_ID=p.PRODUCT_ID
		INNER JOIN ACC_CHART ac on dst.BANK_NAME=ac.ACC_CODE
		WHERE dst.OFFICE_ID=officeID AND dst.ORGANIZATION_ID=orgID  
		AND p.PRODUCT_TYPE = 0 AND ai.TRX_IND='SD' And ai.VOUCHER_TYPE='Cr'
		AND dst.TRANS_TYPE IN(22) AND ac.IS_ACTIVE=1
		GROUP BY dst.OFFICE_ID, ai.VOUCHER_CATEGORY,ac.ACC_ID
		HAVING SUM(NVL(dst.SAVING_INSTALLMENT,0))<>0; 
		
	END IF;

	AUTO_VOUCHER_PROCESS.SAVE_ACC_TRX_DETAIL_FROM_TEMP(officeID,orgID,businessDate,vCH_NO);

	--Start Savings Withdrawal(BANK)--
	naration := 'To Withdrawal As per list from Bank';
	IF(AUTO_VOUCHER_PROCESS.HAS_WITHDRAWAL_FROM_BANK(officeID,orgID,businessDate,
								vCH_NO,naration)<> 0) THEN
								
		INSERT INTO TEMP_ACC_TRX_DETAIL(OFFICE_ID, ACC_ID, CREDIT, DEBIT, NARRATION)
		SELECT officeID OFFICE_ID,ac.ACC_ID,0 CREDIT, 
		Sum(NVL(dst.WITHDRAWAL,0)) DEBIT,naration NARRATION
		FROM DAILY_SAVING_TRX dst INNER JOIN ACCOUNTING_INTERFACE ai ON dst.PRODUCT_ID=ai.PRODUCT_ID
		INNER JOIN PRODUCTS p ON dst.PRODUCT_ID=p.PRODUCT_ID
		INNER JOIN ACC_CHART ac ON ai.ACC_CODE=ac.ACC_CODE
		WHERE dst.OFFICE_ID=officeID  AND p.PRODUCT_TYPE = 0 AND ai.TRX_IND='SW' 
		AND ai.VOUCHER_TYPE='Dr'
		AND dst.TRANS_TYPE IN(22) AND ac.IS_ACTIVE=1 And dst.ORGANIZATION_ID=orgID
		GROUP BY dst.OFFICE_ID, ai.VOUCHER_CATEGORY,ac.ACC_ID
		HAVING SUM(NVL(dst.WITHDRAWAL,0)) <> 0; 
								
	END IF;

	---BankVoucher Contra(BA)--
	naration := 'Savings Withdrawal from Bank';
	IF(AUTO_VOUCHER_PROCESS.HAS_WITHDRAWAL_FROM_BANK(officeID,orgID,businessDate,
								vCH_NO,naration)<> 0) THEN
								
		INSERT INTO TEMP_ACC_TRX_DETAIL(OFFICE_ID, ACC_ID, CREDIT, DEBIT, NARRATION)
		SELECT officeID OFFICE_ID, ac.ACC_ID,SUM(NVL(dst.WITHDRAWAL,0)) CREDIT, 0 DEBIT,naration NARRATION
		FROM DAILY_SAVING_TRX dst 
		INNER JOIN ACCOUNTING_INTERFACE ai on dst.PRODUCT_ID=ai.PRODUCT_ID
		INNER JOIN PRODUCTS p ON dst.PRODUCT_ID=p.PRODUCT_ID
		INNER JOIN ACC_CHART ac ON dst.BANK_NAME=ac.ACC_CODE
		WHERE dst.OFFICE_ID=officeID AND p.PRODUCT_TYPE = 0 
		AND ai.TRX_IND='SW' AND ai.VOUCHER_TYPE='Dr'
		AND dst.TRANS_TYPE IN(22) And ac.IS_ACTIVE=1 AND dst.ORGANIZATION_ID=orgID
		GROUP BY dst.OFFICE_ID, ai.VOUCHER_CATEGORY,ac.ACC_ID
		HAVING SUM(NVL(dst.WITHDRAWAL,0)) <> 0;
	
	END IF;

	--Start Disburse From Bank(BA)--
	naration := 'To Disburse Loan As per list from Bank';
	IF(AUTO_VOUCHER_PROCESS.HAS_LOAN_DISBURSEMENT(officeID, orgID,
   								businessDate,vCH_NO,naration,'102') <> 0) THEN
   								
   		INSERT INTO TEMP_ACC_TRX_DETAIL(OFFICE_ID, ACC_ID, CREDIT, DEBIT, NARRATION)
   		SELECT p.OFFICE_ID,p.ACC_ID,0 CREDIT ,SUM(p.DEBIT) DEBIT,p.NARRATION 
			FROM (
		SELECT 6 OFFICE_ID, ac.ACC_ID,0 CREDIT, 
		SUM(NVL(ls.PRINCIPAL_LOAN,0)) DEBIT,'' NARRATION
	    FROM LOAN_SUMMARY ls INNER JOIN ACCOUNTING_INTERFACE ai on ls.PRODUCT_ID=ai.PRODUCT_ID
		INNER JOIN PRODUCTS p on ls.PRODUCT_ID=p.PRODUCT_ID
		INNER JOIN ACC_CHART ac on ai.ACC_CODE=ac.ACC_CODE
		WHERE ls.OFFICE_ID=6  AND p.PRODUCT_TYPE = 1 
		AND ai.TRX_IND='LD' AND ai.VOUCHER_TYPE='Dr'
		AND ls.TRANS_TYPE='102'  AND ac.IS_ACTIVE=1
		AND ls.DISBURSE_DATE = TO_DATE('2019-10-03','YYYY-MM-DD') 
		AND ls.ORGANIZATION_ID=4 AND ls.INSTALLMENT_DATE=TO_DATE('2019-10-03','YYYY-MM-DD')
		AND ls.IS_ACTIVE=1 AND ls.LOAN_STATUS=1 AND ls.POSTED=0 AND ls.DISBURSEMENT_TYPE<>2
		GROUP BY ls.OFFICE_ID, ai.VOUCHER_CATEGORY,ac.ACC_ID
		HAVING SUM(NVL(ls.PRINCIPAL_LOAN,0))<>0
		UNION ALL
		SELECT 6 OFFICE_ID, ac.ACC_ID, 0 CREDIT, 
		SUM(NVL(ls.PARTIAL_AMOUNT,0)) DEBIT, '' NARRATION
		FROM LOAN_SUMMARY ls 
		INNER JOIN ACCOUNTING_INTERFACE ai ON ls.PRODUCT_ID=ai.PRODUCT_ID
		INNER JOIN PRODUCTS p ON ls.PRODUCT_ID=p.PRODUCT_ID
		INNER JOIN ACC_CHART ac ON ai.ACC_CODE=ac.ACC_CODE
		WHERE ls.OFFICE_ID=6  AND p.PRODUCT_TYPE = 1 AND ai.TRX_IND='LD' AND ai.VOUCHER_TYPE='Dr'
		AND ls.TRANS_TYPE='102'  AND ac.IS_ACTIVE=1
		AND ls.DISBURSE_DATE =TO_DATE('2019-10-03','YYYY-MM-DD') 
		AND ls.ORGANIZATION_ID=4 AND ls.INSTALLMENT_DATE=TO_DATE('2019-10-03','YYYY-MM-DD')
		AND ls.IS_ACTIVE=1 AND ls.LOAN_STATUS=1  and ls.DISBURSEMENT_TYPE=2
		GROUP BY ls.OFFICE_ID, ai.VOUCHER_CATEGORY,ac.ACC_ID
		HAVING SUM(NVL(ls.PARTIAL_AMOUNT,0))<>0
		) p GROUP BY p.OFFICE_ID, p.ACC_ID,p.NARRATION;	
	
	END IF;

	--BankVoucher Contra(BA)--
	naration := 'Disbursement from Bank';

	IF(AUTO_VOUCHER_PROCESS.HAS_DISBURSEMENT_FROM_BANK_CONTRA(officeID,orgID,businessDate,
				vCH_NO,naration)<>0) THEN
		
			INSERT INTO TEMP_ACC_TRX_DETAIL(OFFICE_ID, ACC_ID, CREDIT, DEBIT, NARRATION)
			SELECT p.OFFICE_ID,p.ACC_ID,SUM(p.Debit) CREDIT ,0 DEBIT,p.NARRATION from (
			SELECT officeID OFFICE_ID,ac.ACC_ID,0 CREDIT, 
			SUM(NVL(ls.PRINCIPAL_LOAN,0)) DEBIT,'' NARRATION
			 FROM LOAN_SUMMARY ls 
			 INNER JOIN ACCOUNTING_INTERFACE ai ON ls.PRODUCT_ID=ai.PRODUCT_ID
			 INNER JOIN PRODUCTS p on ls.PRODUCT_ID=p.PRODUCT_ID
			 INNER JOIN ACC_CHART ac on ls.BANK_NAME=ac.ACC_CODE
				WHERE ls.OFFICE_ID=officeID AND p.PRODUCT_TYPE = 1 
					AND ai.TRX_IND='LD' AND ai.VOUCHER_TYPE='Dr'
					AND ls.TRANS_TYPE='102' AND ls.DISBURSE_DATE=businessDate 
					AND ls.INSTALLMENT_DATE=businessDate  AND ac.IS_ACTIVE=1 
					AND ls.ORGANIZATION_ID=orgID AND ls.IS_ACTIVE=1 AND ls.LOAN_STATUS=1 
					AND ls.POSTED=0  and ls.DISBURSEMENT_TYPE<>2
			GROUP BY ls.OFFICE_ID, ai.VOUCHER_CATEGORY,ac.ACC_ID
			HAVING SUM(NVL(ls.PRINCIPAL_LOAN,0)) <>0
			UNION ALL
			SELECT officeID OFFICE_ID,ac.ACC_ID,0 CREDIT,
			SUM(NVL(ls.PARTIAL_AMOUNT,0)) DEBIT ,'' NARRATION
			FROM LOAN_SUMMARY ls INNER JOIN ACCOUNTING_INTERFACE ai on ls.PRODUCT_ID=ai.PRODUCT_ID
			INNER JOIN PRODUCTS p on ls.PRODUCT_ID=p.PRODUCT_ID
			INNER JOIN ACC_CHART ac on ls.BANK_NAME=ac.ACC_CODE
			WHERE ls.OFFICE_ID=officeID AND p.PRODUCT_TYPE = 1 AND ai.TRX_IND='LD' 
				AND ai.VOUCHER_TYPE='Dr' AND ls.TRANS_TYPE='102' 
				AND ls.DISBURSE_DATE=businessDate  AND ls.INSTALLMENT_DATE=businessDate  
				AND ac.IS_ACTIVE=1 And ls.ORGANIZATION_ID=orgID
				AND ls.IS_ACTIVE=1 AND ls.LOAN_STATUS=1 AND ls.DISBURSEMENT_TYPE=2
			GROUP BY ls.OFFICE_ID, ai.VOUCHER_CATEGORY,ac.ACC_ID
			HAVING SUM(NVL(ls.PARTIAL_AMOUNT,0)) <>0
			) p GROUP BY p.OFFICE_ID,p.ACC_ID,p.NARRATION;	

	END IF;

	AUTO_VOUCHER_PROCESS.SAVE_ACC_TRX_DETAIL_FROM_TEMP(officeID,orgID,businessDate,vCH_NO);
	--End Bank Voucher--

	naration := 'To Adjust Previous Loan';

	IF(AUTO_VOUCHER_PROCESS.HAS_ADJUSTABLE_PREVIOUS_LOAN(officeID, orgID, businessDate,
		vCH_NO,naration)<>0) THEN
	
			INSERT INTO TEMP_ACC_TRX_DETAIL(OFFICE_ID,  ACC_ID,CREDIT,DEBIT,NARRATION)
			SELECT officeID OFFICE_ID,ac.ACC_ID,0 CREDIT,
			SUM(NVL(ls.PRINCIPAL_LOAN,0)) DEBIT,naration NARRATION
			FROM LOAN_SUMMARY ls 
			INNER JOIN ACCOUNTING_INTERFACE ai ON ls.PRODUCT_ID=ai.PRODUCT_ID
			INNER JOIN PRODUCTS p ON ls.PRODUCT_ID=p.PRODUCT_ID
			INNER JOIN ACC_CHART ac ON ai.ACC_CODE=ac.ACC_CODE
			WHERE ls.OFFICE_ID=officeID AND p.PRODUCT_TYPE = 1 
			AND ai.TRX_IND='LD' AND ai.VOUCHER_TYPE='Dr'
			AND ls.TRANS_TYPE='103' AND ls.DISBURSE_DATE=businessDate 
			AND ls.INSTALLMENT_DATE=businessDate AND ac.IS_ACTIVE=1 AND ls.ORGANIZATION_ID=orgID
			AND ls.IS_ACTIVE=1 AND ls.LOAN_STATUS=1 AND ls.POSTED=0
			GROUP BY ls.OFFICE_ID, ai.VOUCHER_CATEGORY,ac.ACC_ID
			HAVING SUM(NVL(ls.PRINCIPAL_LOAN,0))<>0;
		
			naration := 'To Adjust Previous ServiceCharge';
		
			INSERT INTO TEMP_ACC_TRX_DETAIL(OFFICE_ID, ACC_ID,CREDIT,DEBIT,NARRATION)
			SELECT officeID OFFICE_ID,ac.ACC_ID,0 CREDIT,
			SUM(NVL(ls.INT_INSTALLMENT,0)) DEBIT,naration NARRATION
			FROM LOAN_SUMMARY ls 
			INNER JOIN ACCOUNTING_INTERFACE ai ON ls.PRODUCT_ID=ai.PRODUCT_ID
			INNER JOIN PRODUCTS p ON ls.PRODUCT_ID=p.PRODUCT_ID
			INNER JOIN ACC_CHART ac ON ai.ACC_CODE=ac.ACC_CODE
			WHERE ls.OFFICE_ID=officeID AND p.PRODUCT_TYPE = 1 
			AND ai.TRX_IND='LD' AND ai.VOUCHER_TYPE='Dr'
			AND ls.TRANS_TYPE='103' AND ls.DISBURSE_DATE=businessDate 
			AND ls.INSTALLMENT_DATE=businessDate AND ac.IS_ACTIVE=1 AND ls.ORGANIZATION_ID=orgID
			AND ls.IS_ACTIVE=1 AND ls.LOAN_STATUS=1 AND ls.POSTED=0
			GROUP BY ls.OFFICE_ID, ai.VOUCHER_CATEGORY,ac.ACC_ID
			HAVING SUM(NVL(ls.INT_INSTALLMENT,0))<>0;

	END IF;

	--Start Transfer Collection--
	naration := 'Adjust Loan Installment as per List';
	
	IF(AUTO_VOUCHER_PROCESS.HAS_ADJUSTABLE_LOAN_INSTALLMENT(officeID, orgID, businessDate,
	vCH_NO, naration)<>0) THEN

		INSERT INTO TEMP_ACC_TRX_DETAIL(OFFICE_ID, ACC_ID, CREDIT, DEBIT, NARRATION)
		SELECT officeID OFFICE_ID, ac.ACC_ID,
		CASE WHEN SUM(NVL(dlt.LOAN_PAID,0))<=0 
			THEN 0 else  SUM(NVL(dlt.LOAN_PAID,0)) END CREDIT, 
		CASE WHEN SUM(NVL(dlt.LOAN_PAID,0))<=0 
			THEN SUM(NVL(dlt.LOAN_PAID,0))*-1 else 0 END DEBIT,
		naration NARRATION
		FROM DAILY_LOAN_TRX dlt 
		INNER JOIN ACCOUNTING_INTERFACE ai ON dlt.PRODUCT_ID=ai.PRODUCT_ID
		INNER JOIN PRODUCTS p ON dlt.PRODUCT_ID=p.PRODUCT_ID
		INNER JOIN ACC_CHART ac ON ai.ACC_CODE=ac.ACC_CODE
		WHERE dlt.OFFICE_ID=officeID  AND p.PRODUCT_TYPE IN (1,2,3) 
		AND ai.TRX_IND='LR' AND ai.VOUCHER_TYPE='Cr'
		AND dlt.TRX_TYPE IN(11,21,31) AND ac.IS_ACTIVE=1 AND dlt.ORGANIZATION_ID=orgID
		GROUP BY dlt.OFFICE_ID, ai.VOUCHER_CATEGORY,ac.ACC_ID
		HAVING SUM(NVL(dlt.LOAN_PAID,0)) <> 0;
	
	END IF;

	--Start WriteOff Declaration to Loan Collection--
	naration := 'Adjust Loan Installment from LLP as per List';

	IF(AUTO_VOUCHER_PROCESS.HAS_ADJUSTABLE_LOAN_INSTALLMENT(officeID, orgID, businessDate,
	vCH_NO, naration)<>0) THEN
		
		INSERT INTO TEMP_ACC_TRX_DETAIL(OFFICE_ID, ACC_ID, CREDIT, DEBIT , NARRATION)
		select officeID OFFICE_ID,ac.ACC_ID,
		CASE WHEN SUM(NVL(dlt.LOAN_PAID,0))<=0 
			THEN 0 ELSE  SUM(NVL(dlt.LOAN_PAID,0)) END CREDIT , 
		CASE WHEN SUM(NVL(dlt.LOAN_PAID,0))<=0 
			THEN SUM(NVL(dlt.LOAN_PAID,0))*-1 ELSE 0 END DEBIT,
		naration NARRATION
		FROM DAILY_LOAN_TRX dlt 
		INNER JOIN ACCOUNTING_INTERFACE ai on dlt.PRODUCT_ID=ai.PRODUCT_ID
		INNER JOIN PRODUCTS p on dlt.PRODUCT_ID=p.PRODUCT_ID
		INNER JOIN ACC_CHART ac on ai.ACC_CODE=ac.ACC_CODE
		WHERE dlt.OFFICE_ID=officeID AND p.PRODUCT_TYPE IN (1,2,3) 
		AND ai.TRX_IND='LR' AND ai.VOUCHER_TYPE='Cr'
		AND dlt.TRX_TYPE IN(71) AND ac.IS_ACTIVE=1 AND dlt.ORGANIZATION_ID=orgID
		GROUP BY dlt.OFFICE_ID, ai.VOUCHER_CATEGORY,ac.ACC_ID
		HAVING SUM(NVL(dlt.LOAN_PAID,0)) <> 0; 
	
	END IF;

	naration := 'LLP Adjust to WriteOff Declaration as per List';
	
	SELECT ACC_ID INTO accCodeLLP FROM ACC_CHART a 
	INNER JOIN ACCOUNTING_INTERFACE ai ON a.ACC_CODE=ai.ACC_CODE 
	WHERE ai.TRX_IND='LL' AND ai.VOUCHER_TYPE='Cr';

	IF(AUTO_VOUCHER_PROCESS.HAS_LLP_WRITEOFF_DECLARATION(officeID,orgID,businessDate,
			vCH_NO,naration)<>0) THEN
		
		INSERT INTO TEMP_ACC_TRX_DETAIL(OFFICE_ID,ACC_ID, CREDIT, DEBIT, NARRATION)
		SELECT officeID OFFICE_ID, accCodeLLP ACC_ID,
		CASE WHEN SUM(NVL(dlt.LOAN_PAID,0))<=0 THEN SUM(NVL(dlt.LOAN_PAID,0))*-1 ELSE 0 END CREDIT,
		CASE WHEN SUM(NVL(dlt.LOAN_PAID,0))<=0 THEN 0 ELSE  SUM(NVL(dlt.LOAN_PAID,0)) END DEBIT,
		naration NARRATION
		FROM DAILY_LOAN_TRX dlt 
		INNER JOIN PRODUCTS p ON dlt.PRODUCT_ID=p.PRODUCT_ID
		WHERE dlt.OFFICE_ID=officeID AND p.PRODUCT_TYPE = 1
		AND dlt.TRX_TYPE IN(71) AND dlt.ORGANIZATION_ID=orgID
		GROUP BY dlt.OFFICE_ID
		HAVING SUM(NVL(dlt.LOAN_PAID,0)) <> 0; 

	END IF;

	--Start Interest Collection(CASH)--
	naration := 'Adjust SC Installment as per List';

	IF(AUTO_VOUCHER_PROCESS.HAS_ADJUSTABLE_SC_INSTALLMENT(officeID,orgID,businessDate,
			vCH_NO,naration) <>0 ) THEN
			
		INSERT INTO TEMP_ACC_TRX_DETAIL(OFFICE_ID, ACC_ID, CREDIT, DEBIT, NARRATION)
		SELECT officeID OFFICE_ID,ac.ACC_ID,
		CASE WHEN SUM(NVL(dlt.INT_PAID,0))<=0 THEN 0 ELSE SUM(NVL(dlt.INT_PAID,0)) END CREDIT, 
		CASE WHEN SUM(NVL(dlt.INT_PAID,0))<=0 THEN SUM(NVL(dlt.INT_PAID,0))*-1 ELSE 0 END DEBIT,
		naration NARRATION
		FROM DAILY_LOAN_TRX dlt 
		INNER JOIN ACCOUNTING_INTERFACE ai ON dlt.PRODUCT_ID=ai.PRODUCT_ID
		INNER JOIN Products p ON dlt.PRODUCT_ID=p.PRODUCT_ID
		INNER JOIN ACC_CHART ac ON ai.ACC_CODE=ac.ACC_CODE
		WHERE dlt.OFFICE_ID=officeID AND p.PRODUCT_TYPE IN(1,2,3) 
		AND ai.TRX_IND='SR' And ai.VOUCHER_TYPE='CR'
		AND dlt.TRX_TYPE IN(11,21) And ac.IS_ACTIVE=1 AND dlt.ORGANIZATION_ID=orgID
		GROUP BY dlt.OFFICE_ID, ai.VOUCHER_CATEGORY,ac.ACC_ID
		HAVING SUM(NVL(dlt.INT_PAID,0)) <> 0;
			
	END IF;

	--Start Saving Collection(JR)--
	naration := 'Adjust Saving Installment as Per List';
	
	IF(AUTO_VOUCHER_PROCESS.HAS_ADJUSTABLE_SAVING_INSTALLMENT(officeID,orgID,businessDate,
			vCH_NO,naration) <>0 ) THEN
			
		INSERT INTO TEMP_ACC_TRX_DETAIL(OFFICE_ID, ACC_ID, CREDIT, DEBIT, NARRATION)
		SELECT officeID OFFICE_ID,ac.ACC_ID,
		SUM(NVL(dst.SAVING_INSTALLMENT,0))+SUM(NVL(dst.PENALTY,0)) +SUM(NVL(dst.MONTHLY_INTEREST,0)) CREDIT,
		0 DEBIT,naration NARRATION
		FROM DAILY_SAVING_TRX dst 
		INNER JOIN ACCOUNTING_INTERFACE ai ON dst.PRODUCT_ID=ai.PRODUCT_ID
		INNER JOIN PRODUCTS p ON dst.PRODUCT_ID=p.PRODUCT_ID
		INNER JOIN ACC_CHART ac ON ai.ACC_CODE=ac.ACC_CODE
		WHERE dst.OFFICE_ID=officeID AND p.PRODUCT_TYPE = 0 
		AND ai.TRX_IND='SD' AND ai.VOUCHER_TYPE='Cr'
		AND dst.TRANS_TYPE IN(11,21,71,23) AND ac.IS_ACTIVE=1 AND dst.ORGANIZATION_ID=orgID
		GROUP BY dst.OFFICE_ID, ai.VOUCHER_CATEGORY,ac.ACC_ID
		HAVING SUM(NVL(dst.SAVING_INSTALLMENT,0))+SUM(NVL(dst.PENALTY,0))+SUM(NVL(dst.MONTHLY_INTEREST,0))<> 0;
	

			
	END IF;

	----DSK----
	naration := 'Excess SC Transfer to Savings as Per List';

	IF(AUTO_VOUCHER_PROCESS.HAS_EXCESS_SC_TRANSFER(officeID,orgID,businessDate,
			vCH_NO,naration) <> 0) THEN
		
		INSERT INTO TEMP_ACC_TRX_DETAIL(OFFICE_ID, ACC_ID, CREDIT, DEBIT, NARRATION)
		SELECT officeID OFFICE_ID, ac.ACC_ID,
		SUM(NVL(dst.SAVING_INSTALLMENT,0))+SUM(NVL(dst.PENALTY,0))+SUM(NVL(dst.MONTHLY_INTEREST,0)) CREDIT,
		0 DEBIT,naration NARRATION
		FROM DAILY_SAVING_TRX dst 
		INNER JOIN ACCOUNTING_INTERFACE ai ON dst.PRODUCT_ID=ai.PRODUCT_ID
		INNER JOIN PRODUCTS p ON dst.PRODUCT_ID=p.PRODUCT_ID
		INNER JOIN ACC_CHART ac ON ai.ACC_CODE=ac.ACC_CODE
		WHERE dst.OFFICE_ID=officeID AND p.PRODUCT_TYPE = 0 
		AND ai.TRX_IND='SD' AND ai.VOUCHER_TYPE='Cr'
		AND dst.TRANS_TYPE IN(32) AND ac.IS_ACTIVE=1 AND dst.ORGANIZATION_ID=orgID
		GROUP BY dst.OFFICE_ID, ai.VOUCHER_CATEGORY,ac.ACC_ID
		HAVING SUM(NVL(dst.SAVING_INSTALLMENT,0))+SUM(NVL(dst.PENALTY,0))+SUM(NVL(dst.MONTHLY_INTEREST,0)) <> 0; 

		INSERT INTO TEMP_ACC_TRX_DETAIL(OFFICE_ID, ACC_ID, CREDIT,DEBIT,NARRATION)
		SELECT officeID OFFICE_ID, ac.ACC_ID,0 CREDIT,
		 (-1)*SUM(NVL(dlt.INT_PAID,0)) DEBIT,naration NARRATION
		FROM DAILY_LOAN_TRX dlt 
		INNER JOIN ACCOUNTING_INTERFACE ai ON dlt.PRODUCT_ID=ai.PRODUCT_ID
		INNER JOIN PRODUCTS p ON dlt.PRODUCT_ID=p.PRODUCT_ID
		INNER JOIN ACC_CHART ac ON ai.ACC_CODE=ac.ACC_CODE
		WHERE dlt.OFFICE_ID=officeID AND dlt.ORGANIZATION_ID=orgID 
		AND p.PRODUCT_TYPE IN (1,2,3) AND ai.TRX_IND='SR' AND ai.VOUCHER_TYPE='Cr'
		AND dlt.TRX_TYPE IN(32) And ac.IS_ACTIVE=1
		GROUP BY dlt.OFFICE_ID, ai.VOUCHER_CATEGORY,ac.ACC_ID
		HAVING SUM(NVL(dlt.INT_PAID,0)) <> 0; 

	END IF;

	--Start Saving Withdrawal(Jr)--
	
	SELECT VOUCHER_NO INTO vCH_NO FROM ACC_LAST_VOUCHER WHERE OFFICE_ID=officeID;

	naration :=  'Adjust Saving Withdrawal as Per List';

	IF(AUTO_VOUCHER_PROCESS.HAS_ADJUSTABLE_SAVING_WITHDRAWAL(officeID,orgID,businessDate,
			vCH_NO,naration) <> 0) THEN
			
		INSERT INTO TEMP_ACC_TRX_DETAIL(OFFICE_ID, ACC_ID,CREDIT,DEBIT,NARRATION)
		SELECT officeID OFFICE_ID, ac.ACC_ID,0 CREDIT, 
		SUM(NVL(dst.WITHDRAWAL,0)) DEBIT,naration NARRATION
		FROM DAILY_SAVING_TRX dst 
		INNER JOIN ACCOUNTING_INTERFACE ai 
			ON dst.PRODUCT_ID=ai.PRODUCT_ID
		INNER JOIN PRODUCTS p ON dst.PRODUCT_ID=p.PRODUCT_ID
		INNER JOIN ACC_CHART ac on ai.ACC_CODE=ac.ACC_CODE
		WHERE dst.OFFICE_ID=officeID AND p.PRODUCT_TYPE = 0 
		AND ai.TRX_IND='SW' AND ai.VOUCHER_TYPE='Dr'
		AND dst.TRANS_TYPE IN(11,21,71) AND dst.ORGANIZATION_ID=orgID
		GROUP BY dst.OFFICE_ID, ai.VOUCHER_CATEGORY,ac.ACC_ID
		HAVING SUM(NVL(dst.WITHDRAWAL,0)) <> 0;

	END IF;

	--Savings Interest JR DSK--
	naration :=  'Savings Interest distribution as Per List';

	IF(AUTO_VOUCHER_PROCESS.HAS_SAVINGS_INTEREST_DISTRIBUTION(officeID,orgID,businessDate,
			vCH_NO,naration)<>0) THEN
			
		INSERT INTO TEMP_ACC_TRX_DETAIL(OFFICE_ID, ACC_ID, CREDIT, DEBIT, NARRATION)
		SELECT officeID OFFICE_ID,ac.ACC_ID,0 CREDIT,
		SUM(NVL(dst.MONTHLY_INTEREST,0)) DEBIT,naration NARRATION
		FROM DAILY_SAVING_TRX dst 
		INNER JOIN ACCOUNTING_INTERFACE ai ON dst.PRODUCT_ID=ai.PRODUCT_ID
		INNER JOIN PRODUCTS p ON dst.PRODUCT_ID=p.PRODUCT_ID
		INNER JOIN ACC_CHART ac ON ai.ACC_CODE=ac.ACC_CODE
		WHERE dst.OFFICE_ID=officeID AND p.PRODUCT_TYPE = 0 
		AND ai.TRX_IND='GS' AND ai.VOUCHER_TYPE='Cr'
		AND dst.TRANS_TYPE IN(21,23) AND ac.IS_ACTIVE=1 AND dst.ORGANIZATION_ID=orgID
		GROUP BY dst.OFFICE_ID, ai.VOUCHER_CATEGORY,ac.ACC_ID
		HAVING SUM(NVL(dst.MONTHLY_INTEREST,0))<> 0;
	
	END IF;

	AUTO_VOUCHER_PROCESS.SAVE_ACC_TRX_DETAIL_FROM_TEMP(officeID,orgID,businessDate,vCH_NO);

	--Start Rebate Collection(Transfer)--
	IF (orgID  NOT IN (5,54)) THEN
		naration := 'Rebate SC as per List';
	
		IF(AUTO_VOUCHER_PROCESS.HAS_REBATE_SC(officeID,orgID,businessDate,
			vCH_NO,naration) <> 0) THEN
			
			INSERT INTO TEMP_ACC_TRX_DETAIL(OFFICE_ID, ACC_ID, CREDIT, DEBIT, NARRATION)
			SELECT officeID OFFICE_ID, ac.ACC_ID, 
			SUM(NVL(dlt.INT_PAID,0)) CREDIT, 0 DEBIT,naration NARRATION
			FROM DAILY_LOAN_TRX dlt 
			INNER JOIN  ACCOUNTING_INTERFACE ai ON dlt.PRODUCT_ID=ai.PRODUCT_ID
			INNER JOIN  PRODUCTS p ON dlt.PRODUCT_ID=p.PRODUCT_ID
			INNER JOIN  ACC_CHART ac ON ai.ACC_CODE=ac.ACC_CODE
			WHERE dlt.OFFICE_ID=officeID AND p.PRODUCT_TYPE IN (1,2,3) 
			AND ai.TRX_IND='SR' AND ai.VOUCHER_TYPE='CR'
			AND dlt.TRX_TYPE IN(31,71) AND ac.IS_ACTIVE=1 AND dlt.ORGANIZATION_ID=orgID
			GROUP BY dlt.OFFICE_ID, ai.VOUCHER_CATEGORY,ac.ACC_ID
			HAVING SUM(NVL(dlt.INT_PAID,0)) <> 0;
		
		
			INSERT INTO TEMP_ACC_TRX_DETAIL(OFFICE_ID, ACC_ID,CREDIT,DEBIT,NARRATION)
			SELECT officeID OFFICE_ID,ac.ACC_ID, 0 CREDIT, 
			SUM(NVL(dlt.INT_PAID,0)) DEBIT, naration NARRATION
			FROM DAILY_LOAN_TRX dlt 
			INNER JOIN ACCOUNTING_INTERFACE ai on dlt.PRODUCT_ID=ai.PRODUCT_ID
			INNER JOIN PRODUCTS p on dlt.PRODUCT_ID=p.PRODUCT_ID
			INNER JOIN ACC_CHART ac on ai.ACC_CODE=ac.ACC_CODE
			WHERE dlt.OFFICE_ID=officeID  AND p.PRODUCT_TYPE IN (1,2,3) 
			AND ai.TRX_IND='RB' AND ai.VOUCHER_TYPE='DR'
			AND dlt.TRX_TYPE IN(31,71) AND ac.IS_ACTIVE=1 AND dlt.ORGANIZATION_ID=orgID
			GROUP BY dlt.OFFICE_ID, ai.VOUCHER_CATEGORY,ac.ACC_ID
			HAVING SUM(NVL(dlt.INT_PAID,0)) <> 0;


		END IF;
	
		AUTO_VOUCHER_PROCESS.SAVE_ACC_TRX_DETAIL_FROM_TEMP(officeID,orgID,businessDate,vCH_NO);
	
	END IF;

	naration :='RiskFund Adjustment as per list';

	IF(AUTO_VOUCHER_PROCESS.HAS_ADJUSTABLE_RISKFUND(officeID)<>0) THEN
		
		INSERT INTO TEMP_ACC_TRX_DETAIL(OFFICE_ID, ACC_ID, CREDIT, DEBIT, NARRATION)
		SELECT officeID OFFICE_ID, RMAccidDr ACC_ID,0 CREDIT,
		SUM(LOAN_PAID) DEBIT,naration NARRATION 
		FROM DAILY_LOAN_TRX d 
		INNER JOIN EXPIRE_INFOS e ON d.OFFICE_ID=e.OFFICE_ID
 		AND d.MEMBER_ID=e.MEMBER_ID WHERE d.OFFICE_ID=officeID 
 		AND d.LOAN_PAID > 0 AND d.TRX_TYPE=21;
 
	END IF;

	AUTO_VOUCHER_PROCESS.SAVE_ACC_TRX_DETAIL_FROM_TEMP(officeID,orgID,businessDate,vCH_NO);

	UPDATE AUTO_VOUCHER_CHECK
	SET CHECK_AUTO_VOUCHER=1 WHERE  OFFICE_ID=officeID;

	<<validation_point>>
    BEGIN
	  IF(isValid = 1) THEN
    	WRITE_LOG(msg);
    	ROLLBACK;
	  END IF;
    END;
   
EXCEPTION
	WHEN OTHERS THEN
	WRITE_LOG(spName || SQLERRM);
	ROLLBACK;

COMMIT;

END;